// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./workout.db"
}

generator client {
  provider = "prisma-client-js"
}

model Exercise {
  id                  Int       @id @default(autoincrement())
  createdAt           DateTime  @default(now())
  name                String
  muscleGroup         String
  exercisesOnWorkouts ExercisesOnWorkouts[]
}

model Workout {
  id                  Int @id @default(autoincrement())
  name                String
  exercisesOnWorkouts ExercisesOnWorkouts[]
  user                User @relation(fields: [userId], references: [id])
  userId              Int
  logs                Log[]
}

model ExercisesOnWorkouts {
  id          Int @id @default(autoincrement())
  exercise    Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId  Int
  workout     Workout @relation(fields: [workoutId], references: [id])
  workoutId   Int
  setTargets  SetTarget[]
  logEntries  LogEntry[]
}

model User {
  id        Int @id @default(autoincrement())
  name      String
  email     String @unique
  password  String
  workouts  Workout[]
}

model SetTarget {
  id                    Int @id @default(autoincrement())
  exercisesOnWorkouts   ExercisesOnWorkouts @relation(fields: [exercisesOnWorkoutsId], references: [id])
  exercisesOnWorkoutsId Int
  setNumber             Int
  reps                  Int @default(3)
  weight                Int @default(10)
}

model Log {
  id          Int @id @default(autoincrement())
  workout     Workout @relation(fields: [workoutId], references: [id])
  workoutId   Int
  date        DateTime  @default(now())
  logEntries  LogEntry[]
}

model LogEntry {
  id  Int @id @default(autoincrement())
  log Log @relation(fields: [logId], references:[id])
  logId Int
  exercisesOnWorkouts   ExercisesOnWorkouts @relation(fields: [exercisesOnWorkoutsId], references: [id])
  exercisesOnWorkoutsId Int
  setNumber Int
  reps      Int
  weight    Int
  timeRecorded  DateTime @default(now())
}